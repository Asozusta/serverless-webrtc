{"version":3,"sources":["webpack:///static/js/app.41670cd4a1ae1b81d63e.js","webpack:///./src/main.js","webpack:///App.vue","webpack:///Chat.vue","webpack:///./src/assets/img/spinner.gif","webpack:///./src/App.vue?d818","webpack:///./src/components/Chat.vue?fc0d","webpack:///./src/App.vue","webpack:///./src/components/Chat.vue"],"names":["webpackJsonp","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","onDeviceReady","window","cordova","logger","__onDeviceReady","_vue","_vue2","_App","_App2","console","log","document","addEventListener","el","components","App","Object","defineProperty","value","_Chat","_Chat2","Chat","adapt","navigator","mozGetUserMedia","webrtcDetectedBrowser","RTCPeerConnection","mozRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","RTCIceCandidate","mozRTCIceCandidate","getUserMedia","bind","attachMediaStream","element","stream","mozSrcObject","play","reattachMediaStream","to","from","MediaStream","prototype","getVideoTracks","getAudioTracks","webkitGetUserMedia","webkitRTCPeerConnection","src","webkitURL","createObjectURL","webkitMediaStream","this","videoTracks","audioTracks","getLocalStreams","localStreams","getRemoteStreams","remoteStreams","alert","build","cfg","iceServers","url","con","optional","DtlsSrtpKeyAgreement","pc1","dc1","tn1","pc1icedone","sdpConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","fileSent","file","fileProgress","sendFile","data","size","FileSender","send","onFileSent","onFileProgress","setupDC1","fileReceiver1","FileReceiver","createDataChannel","reliable","activedc","onopen","e","$","modal","remove","onmessage","receive","charCodeAt","JSON","parse","type","writeToChatLog","message","scrollTop","scrollHeight","warn","createLocalOffer","msGetUserMedia","video","audio","getElementById","URL","addStream","createOffer","desc","setLocalDescription","error","onicecandidate","candidate","html","_stringify2","localDescription","handleOnaddstream","autoplay","onaddstream","handleOnconnection","focus","hide","onconnection","onsignalingstatechange","state","info","oniceconnectionstatechange","onicegatheringstatechange","handleAnswerFromPC2","answerDesc","setRemoteDescription","handleCandidateFromPC2","iceCandidate","addIceCandidate","pc2","dc2","pc2icedone","ondatachannel","fileReceiver2","datachannel","channel","arguments","handleOfferFromPC1","offerDesc","createAnswer","handleCandidateFromPC1","getTimestamp","totalSec","Date","getTime","hours","parseInt","minutes","seconds","result","message_type","innerHTML","moz","RTCMultiSession","options","config","onReadAsDataURL","event","text","target","numberOfPackets","packets","length","packetSize","remaining","sent","slice","last","name","textToTransfer","setTimeout","fileName","reader","FileReader","readAsDataURL","onload","FileSaver","SaveToDisk","onFileReceived","parsedData","received","content","push","join","fileUrl","save","createElement","href","download","evt","MouseEvent","view","bubbles","cancelable","dispatchEvent","revokeObjectURL","run","click","offer","val","answer","change","files","_stringify","userAgent","match","device","platform","plugins","iosrtc","registerGlobals","cordovaReady","ready","methods","sendMessage","p","__vue_script__","__vue_template__","template"],"mappings":"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G4DL,KH3DKE,EG4DL,KH3DKK,EG4DL,KH3DKd,EG4DL,KH3DKoC,EG4DL,KH3DKG,EG4DL,KH3DKG,EG4DL,KH3DKC,EG4DL,KH3DKC,EG4DL,KH3DKqB,EG4DL,KH3DKpB,EG4DL,KH3DKC,EG4DL,KH3DKI,EG4DL,KH3DKE,EG4DL,KH3DKC,EG4DL,KH3DKO,EG4DL,KH3DKsB,EG4DL,KH3DKgB,EG4DL,KH3DKG,EG4DL,KH3DKI,EG4DL,KH3DKG,EG4DL,KH3DKC,EG4DL,KH3DKC,EG4DL,KH3DKG,EG4DL,KH3DKG,EG4DL,KH3DKC,EG4DL,KH3DKC,EG4DL,KH3DKM,EG4DL,KH3DKG,EG4DL,KH3DKC,EG4DL,KH3DKnD,EG4DL,KH3DK+D,EG4DL,KH3DKpF,EG4DL,KH3DKM,EG4DL,KH3DKqG,EAAY,IG6DjBrK,WAAAiM,UAAAC,MAAA,mDH1DGhN,QAAQC,IG4DX,WH1DOT,OAAOyN,QACTjN,QAAQC,IG2Db,wBHzDoC,QAA3BT,OAAOyN,OAAOC,WAChBlN,QAAQC,IG0Df,OHxDOR,QAAQ0N,QAAQC,OGyDvBC,mBAGAxM,IACAsC,KHvDKjD,SAASC,iBAAiB,cAAe,WACvCH,QAAQC,IG0Df,mCHxDsC,QAA3BT,OAAOyN,OAAOC,WAChBlN,QAAQC,IGyDjB,OHvDSR,QAAQ0N,QAAQC,OGwDzBC,mBAGAxM,IACAsC,QHpDGnD,QAAQC,IGyDX,eACAY,IACAsC,KH+bClE,cACEqF,KAAM,WACJ,OACEgJ,cGsGP,IHnGGC,MAAO,WACLvN,QAAQC,IGoGb,SHnGSa,UAAUiM,UAAUC,MAAM,kDACxBxN,OAAOyN,OGuGlBV,IHpGSrM,SAASC,iBAAiB,cAAe,WGwGlDoM,MAKAA,KHrGGiB,SACEC,YAAa,WACX,GAAIrI,EAAE,mBAAmBsH,MGwGhC,CHvGS,GAAIhE,GAAU,GGwGvBkB,EHvGS/D,GAAeT,EAAE,mBAAmBsH,MGwG7C,gBHvGShE,EAAQjE,MAAOqB,QAASV,EAAE,mBGwGnCsH,QHvGStH,EAAE,mBAAmBsH,IG0G9B,IHxGStH,EAAE,YAAYW,UAAUX,EAAE,YAAY,GGyG/CY,cHtGO,OGyGP,MHnGO,CACA,CACA,CAED,SAAShH,EAAQC,KAMjB,SAASD,EAAQC,KAMjB,SAASD,EAAQC,EAASC,GI5rBhCF,EAAAC,QAAAC,EAAAwO,EAAA,kCJksBM,SAAS1O,EAAQC,GKlsBvBD,EAAAC,QAAA,uCLwsBM,SAASD,EAAQC,EAASC,GMxsBhCF,EAAAC,QAAA,irJAAwlBC,EAAA,orBN8sBllB,SAASF,EAAQC,EAASC,GO9sBhC,GAAAyO,GAAAC,CACA1O,GAAA,GACAyO,EAAAzO,EAAA,GACA0O,EAAA1O,EAAA,GACAF,EAAAC,QAAA0O,MACA3O,EAAAC,QAAAI,aAAAL,EAAAC,QAAAD,EAAAC,QAAAD,YACA4O,KACA,kBAAA5O,GAAAC,QAAAD,EAAAC,QAAA4K,UAAA7K,EAAAC,QAAA4K,YAA+F7K,EAAAC,SAAA4O,SAAAD,IPstBzF,SAAS5O,EAAQC,EAASC,GQ7tBhC,GAAAyO,GAAAC,CACA1O,GAAA,GACAyO,EAAAzO,EAAA,GACA0O,EAAA1O,EAAA,IACAF,EAAAC,QAAA0O,MACA3O,EAAAC,QAAAI,aAAAL,EAAAC,QAAAD,EAAAC,QAAAD,YACA4O,KACA,kBAAA5O,GAAAC,QAAAD,EAAAC,QAAA4K,UAAA7K,EAAAC,QAAA4K,YAA+F7K,EAAAC,SAAA4O,SAAAD","file":"static/js/app.41670cd4a1ae1b81d63e.js","sourcesContent":["webpackJsonp([1,0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(13);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(11);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tconsole.log(\"main\");\n\t\n\tfunction onDeviceReady() {\n\t    if (window.cordova.logger) {\n\t        window.cordova.logger.__onDeviceReady();\n\t    }\n\t}\n\t\n\tdocument.addEventListener('deviceready', onDeviceReady, false);\n\t\n\tnew _vue2.default({\n\t    el: 'body',\n\t    components: { App: _App2.default }\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Chat = __webpack_require__(12);\n\t\n\tvar _Chat2 = _interopRequireDefault(_Chat);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tconsole.log(\"app\");\n\t\n\texports.default = {\n\t  components: {\n\t    Chat: _Chat2.default\n\t  }\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _stringify = __webpack_require__(3);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tconsole.log(\"in chat\");\n\t\n\tvar RTCPeerConnection = null,\n\t    RTCSessionDescription = null,\n\t    RTCIceCandidate = null,\n\t    getUserMedia = null,\n\t    attachMediaStream = null,\n\t    reattachMediaStream = null,\n\t    webrtcDetectedBrowser = null,\n\t    cfg = null,\n\t    con = null,\n\t    pc1 = null,\n\t    dc1 = null,\n\t    tn1 = null,\n\t    activedc = null,\n\t    pc1icedone = null,\n\t    sdpConstraints = null,\n\t    fileSent = null,\n\t    fileProgress = null,\n\t    sendFile = null,\n\t    setupDC1 = null,\n\t    createLocalOffer = null,\n\t    handleOnaddstream = null,\n\t    handleOnconnection = null,\n\t    onsignalingstatechange = null,\n\t    oniceconnectionstatechange = null,\n\t    onicegatheringstatechange = null,\n\t    handleAnswerFromPC2 = null,\n\t    handleCandidateFromPC2 = null,\n\t    pc2 = null,\n\t    dc2 = null,\n\t    pc2icedone = null,\n\t    handleOfferFromPC1 = null,\n\t    handleCandidateFromPC1 = null,\n\t    getTimestamp = null,\n\t    writeToChatLog = null,\n\t    RTCMultiSession = null,\n\t    FileSender = null,\n\t    FileReceiver = null,\n\t    FileSaver = null;\n\t\n\tif (navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry|IEMobile)/)) {\n\t  console.log(\"cordova\");\n\t\n\t  if (window.device) {\n\t    console.log(\"script: device ready\");\n\t\n\t    if (window.device.platform === 'iOS') {\n\t      console.log(\"iOS\");\n\t\n\t      cordova.plugins.iosrtc.registerGlobals();\n\t    }\n\t\n\t    adapt();\n\t    build();\n\t  } else {\n\t    document.addEventListener('deviceready', function () {\n\t      console.log(\"script: listener - device ready\");\n\t\n\t      if (window.device.platform === 'iOS') {\n\t        console.log(\"iOS\");\n\t\n\t        cordova.plugins.iosrtc.registerGlobals();\n\t      }\n\t\n\t      adapt();\n\t      build();\n\t    });\n\t  };\n\t} else {\n\t  console.log(\"Not cordova\");\n\t\n\t  adapt();\n\t  build();\n\t}\n\t\n\tfunction adapt() {\n\t  console.log(\"adapting\");\n\t  if (navigator.mozGetUserMedia) {\n\t    console.log('This appears to be Firefox');\n\t\n\t    webrtcDetectedBrowser = 'firefox';\n\t\n\t    RTCPeerConnection = mozRTCPeerConnection;\n\t\n\t    RTCSessionDescription = mozRTCSessionDescription;\n\t\n\t    RTCIceCandidate = mozRTCIceCandidate;\n\t\n\t    getUserMedia = navigator.mozGetUserMedia.bind(navigator);\n\t\n\t    attachMediaStream = function attachMediaStream(element, stream) {\n\t      console.log('Attaching media stream');\n\t      element.mozSrcObject = stream;\n\t      element.play();\n\t    };\n\t\n\t    reattachMediaStream = function reattachMediaStream(to, from) {\n\t      console.log('Reattaching media stream');\n\t      to.mozSrcObject = from.mozSrcObject;\n\t      to.play();\n\t    };\n\t\n\t    MediaStream.prototype.getVideoTracks = function () {\n\t      return [];\n\t    };\n\t\n\t    MediaStream.prototype.getAudioTracks = function () {\n\t      return [];\n\t    };\n\t  } else if (navigator.webkitGetUserMedia) {\n\t    console.log('This appears to be Chrome or iOS using a shim');\n\t\n\t    webrtcDetectedBrowser = 'chrome';\n\t\n\t    RTCPeerConnection = webkitRTCPeerConnection;\n\t\n\t    getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\n\t\n\t    attachMediaStream = function attachMediaStream(element, stream) {\n\t      element.src = webkitURL.createObjectURL(stream);\n\t    };\n\t\n\t    reattachMediaStream = function reattachMediaStream(to, from) {\n\t      to.src = from.src;\n\t    };\n\t\n\t    if (!webkitMediaStream.prototype.getVideoTracks) {\n\t      webkitMediaStream.prototype.getVideoTracks = function () {\n\t        return this.videoTracks;\n\t      };\n\t      webkitMediaStream.prototype.getAudioTracks = function () {\n\t        return this.audioTracks;\n\t      };\n\t    }\n\t\n\t    if (!webkitRTCPeerConnection.prototype.getLocalStreams) {\n\t      webkitRTCPeerConnection.prototype.getLocalStreams = function () {\n\t        return this.localStreams;\n\t      };\n\t      webkitRTCPeerConnection.prototype.getRemoteStreams = function () {\n\t        return this.remoteStreams;\n\t      };\n\t    }\n\t  } else {\n\t    alert(\"This browser doesn't support webRTC and cannot be used to chat\");\n\t  };\n\t};\n\t\n\tfunction build() {\n\t  console.log(\"building\");\n\t  cfg = { 'iceServers': [{ 'url': 'stun:23.21.150.121' }] };\n\t  con = { 'optional': [{ 'DtlsSrtpKeyAgreement': true }] };\n\t\n\t  pc1 = new RTCPeerConnection(cfg, con);\n\t  dc1 = null;\n\t  tn1 = null;\n\t\n\t  pc1icedone = false;\n\t\n\t  sdpConstraints = {\n\t    optional: [],\n\t    mandatory: {\n\t      OfferToReceiveAudio: true,\n\t      OfferToReceiveVideo: true\n\t    }\n\t  };\n\t\n\t  fileSent = function fileSent(file) {\n\t    console.log(file + ' sent');\n\t  };\n\t\n\t  fileProgress = function fileProgress(file) {\n\t    console.log(file + ' progress');\n\t  };\n\t\n\t  sendFile = function sendFile(data) {\n\t    if (data.size) {\n\t      FileSender.send({\n\t        file: data,\n\t        onFileSent: fileSent,\n\t        onFileProgress: fileProgress\n\t      });\n\t    }\n\t  };\n\t\n\t  setupDC1 = function setupDC1() {\n\t    try {\n\t      var fileReceiver1 = new FileReceiver();\n\t      dc1 = pc1.createDataChannel('test', { reliable: true });\n\t      activedc = dc1;\n\t      console.log('Created datachannel (pc1)');\n\t      dc1.onopen = function (e) {\n\t        console.log('data channel connect');\n\t        $('#waitForConnection').modal('hide');\n\t        $('#waitForConnection').remove();\n\t      };\n\t      dc1.onmessage = function (e) {\n\t        console.log('Got message (pc1)', e.data);\n\t        if (e.data.size) {\n\t          fileReceiver1.receive(e.data, {});\n\t        } else {\n\t          if (e.data.charCodeAt(0) == 2) {\n\t            return;\n\t          }\n\t          console.log(e);\n\t          var data = JSON.parse(e.data);\n\t          if (data.type === 'file') {\n\t            fileReceiver1.receive(e.data, {});\n\t          } else {\n\t            writeToChatLog(data.message, 'text-info');\n\t\n\t            $('#chatlog').scrollTop($('#chatlog')[0].scrollHeight);\n\t          }\n\t        }\n\t      };\n\t    } catch (e) {\n\t      console.warn('No data channel (pc1)', e);\n\t    }\n\t  };\n\t\n\t  createLocalOffer = function createLocalOffer() {\n\t    console.log('video1');\n\t    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\t    navigator.getUserMedia({ video: true, audio: true }, function (stream) {\n\t      var video = document.getElementById('localVideo');\n\t      video.src = window.URL.createObjectURL(stream);\n\t      video.play();\n\t      pc1.addStream(stream);\n\t      console.log(stream);\n\t      console.log('adding stream to pc1');\n\t      setupDC1();\n\t      pc1.createOffer(function (desc) {\n\t        pc1.setLocalDescription(desc, function () {}, function () {});\n\t        console.log('created local offer', desc);\n\t      }, function () {\n\t        console.warn(\"Couldn't create offer\");\n\t      }, sdpConstraints);\n\t    }, function (error) {\n\t      console.log('Error adding stream to pc1: ' + error);\n\t    });\n\t  };\n\t\n\t  pc1.onicecandidate = function (e) {\n\t    console.log('ICE candidate (pc1)', e);\n\t    if (e.candidate == null) {\n\t      $('#localOffer').html((0, _stringify2.default)(pc1.localDescription));\n\t    }\n\t  };\n\t\n\t  handleOnaddstream = function handleOnaddstream(e) {\n\t    console.log('Got remote stream', e.stream);\n\t    var el = document.getElementById('remoteVideo');\n\t    el.autoplay = true;\n\t    attachMediaStream(el, e.stream);\n\t  };\n\t\n\t  pc1.onaddstream = handleOnaddstream;\n\t\n\t  handleOnconnection = function handleOnconnection() {\n\t    console.log('Datachannel connected');\n\t    writeToChatLog('Datachannel connected', 'text-success');\n\t    $('#waitForConnection').modal('hide');\n\t\n\t    $('#waitForConnection').remove();\n\t    $('#showLocalAnswer').modal('hide');\n\t    $('#messageTextBox').focus();\n\t    $('.modal-backdrop').hide();\n\t  };\n\t\n\t  pc1.onconnection = handleOnconnection;\n\t\n\t  onsignalingstatechange = function onsignalingstatechange(state) {\n\t    console.info('signaling state change:', state);\n\t  };\n\t\n\t  oniceconnectionstatechange = function oniceconnectionstatechange(state) {\n\t    console.info('ice connection state change:', state);\n\t  };\n\t\n\t  onicegatheringstatechange = function onicegatheringstatechange(state) {\n\t    console.info('ice gathering state change:', state);\n\t  };\n\t\n\t  pc1.onsignalingstatechange = onsignalingstatechange;\n\t  pc1.oniceconnectionstatechange = oniceconnectionstatechange;\n\t  pc1.onicegatheringstatechange = onicegatheringstatechange;\n\t\n\t  handleAnswerFromPC2 = function handleAnswerFromPC2(answerDesc) {\n\t    console.log('Received remote answer: ', answerDesc);\n\t    writeToChatLog('Received remote answer', 'text-success');\n\t    pc1.setRemoteDescription(answerDesc);\n\t  };\n\t\n\t  handleCandidateFromPC2 = function handleCandidateFromPC2(iceCandidate) {\n\t    pc1.addIceCandidate(iceCandidate);\n\t  };\n\t\n\t  pc2 = new RTCPeerConnection(cfg, con);\n\t  dc2 = null;\n\t\n\t  pc2icedone = false;\n\t\n\t  pc2.ondatachannel = function (e) {\n\t    var fileReceiver2 = new FileReceiver();\n\t    var datachannel = e.channel || e;\n\t    console.log('Received datachannel (pc2)', arguments);\n\t    dc2 = datachannel;\n\t    activedc = dc2;\n\t    dc2.onopen = function (e) {\n\t      console.log('data channel connect');\n\t      $('#waitForConnection').modal('hide');\n\t      $('#waitForConnection').remove();\n\t    };\n\t    dc2.onmessage = function (e) {\n\t      console.log('Got message (pc2)', e.data);\n\t      if (e.data.size) {\n\t        fileReceiver2.receive(e.data, {});\n\t      } else {\n\t        var data = JSON.parse(e.data);\n\t        if (data.type === 'file') {\n\t          fileReceiver2.receive(e.data, {});\n\t        } else {\n\t          writeToChatLog(data.message, 'text-info');\n\t\n\t          $('#chatlog').scrollTop($('#chatlog')[0].scrollHeight);\n\t        }\n\t      }\n\t    };\n\t  };\n\t\n\t  handleOfferFromPC1 = function handleOfferFromPC1(offerDesc) {\n\t    pc2.setRemoteDescription(offerDesc);\n\t    pc2.createAnswer(function (answerDesc) {\n\t      writeToChatLog('Created local answer', 'text-success');\n\t      console.log('Created local answer: ', answerDesc);\n\t      pc2.setLocalDescription(answerDesc);\n\t    }, function () {\n\t      console.warn(\"Couldn't create offer\");\n\t    }, sdpConstraints);\n\t  };\n\t\n\t  pc2.onicecandidate = function (e) {\n\t    console.log('ICE candidate (pc2)', e);\n\t    if (e.candidate == null) {\n\t      $('#localAnswer').html((0, _stringify2.default)(pc2.localDescription));\n\t    }\n\t  };\n\t\n\t  pc2.onsignalingstatechange = onsignalingstatechange;\n\t  pc2.oniceconnectionstatechange = oniceconnectionstatechange;\n\t  pc2.onicegatheringstatechange = onicegatheringstatechange;\n\t\n\t  handleCandidateFromPC1 = function handleCandidateFromPC1(iceCandidate) {\n\t    pc2.addIceCandidate(iceCandidate);\n\t  };\n\t\n\t  pc2.onaddstream = handleOnaddstream;\n\t  pc2.onconnection = handleOnconnection;\n\t\n\t  getTimestamp = function getTimestamp() {\n\t    var totalSec = new Date().getTime() / 1000;\n\t    var hours = parseInt(totalSec / 3600) % 24;\n\t    var minutes = parseInt(totalSec / 60) % 60;\n\t    var seconds = parseInt(totalSec % 60);\n\t\n\t    var result = (hours < 10 ? '0' + hours : hours) + ':' + (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\n\t\n\t    return result;\n\t  };\n\t\n\t  writeToChatLog = function writeToChatLog(message, message_type) {\n\t    document.getElementById('chatlog').innerHTML += '<p class=\"' + message_type + '\">' + '[' + getTimestamp() + '] ' + message + '</p>';\n\t  };\n\t\n\t  window.moz = !!navigator.mozGetUserMedia;\n\t\n\t  RTCMultiSession = function RTCMultiSession(options) {\n\t    return {\n\t      send: function send(message) {\n\t        if (moz && message.file) var data = message.file;else var data = (0, _stringify2.default)(message);\n\t\n\t        activedc.send(data);\n\t      }\n\t    };\n\t  };\n\t\n\t  FileSender = {\n\t    send: function send(config) {\n\t      var channel = config.channel || new RTCMultiSession();\n\t      var file = config.file;\n\t\n\t      if (moz) {\n\t        channel.send({\n\t          fileName: file.name,\n\t          type: 'file'\n\t        });\n\t\n\t        channel.send({\n\t          file: file\n\t        });\n\t\n\t        if (config.onFileSent) config.onFileSent(file);\n\t      }\n\t\n\t      if (!moz) {\n\t        var reader = new window.FileReader();\n\t        reader.readAsDataURL(file);\n\t        reader.onload = onReadAsDataURL;\n\t      }\n\t\n\t      var packetSize = 1000,\n\t          textToTransfer = '',\n\t          numberOfPackets = 0,\n\t          packets = 0;\n\t\n\t      function onReadAsDataURL(event, text) {\n\t        var data = {\n\t          type: 'file'\n\t        };\n\t\n\t        if (event) {\n\t          text = event.target.result;\n\t          numberOfPackets = packets = data.packets = parseInt(text.length / packetSize);\n\t        }\n\t\n\t        if (config.onFileProgress) config.onFileProgress({\n\t          remaining: packets--,\n\t          length: numberOfPackets,\n\t          sent: numberOfPackets - packets\n\t        });\n\t\n\t        if (text.length > packetSize) {\n\t          data.message = text.slice(0, packetSize);\n\t        } else {\n\t          data.message = text;\n\t          data.last = true;\n\t          data.name = file.name;\n\t\n\t          if (config.onFileSent) config.onFileSent(file);\n\t        }\n\t\n\t        channel.send(data);\n\t\n\t        textToTransfer = text.slice(data.message.length);\n\t\n\t        if (textToTransfer.length) setTimeout(function () {\n\t          onReadAsDataURL(null, textToTransfer);\n\t        }, 500);\n\t      }\n\t    }\n\t  };\n\t\n\t  FileReceiver = function FileReceiver() {\n\t    var content = [],\n\t        fileName = '',\n\t        packets = 0,\n\t        numberOfPackets = 0;\n\t\n\t    function receive(data, config) {\n\t      if (moz) {\n\t        if (!data.size) {\n\t          var parsedData = JSON.parse(data);\n\t          if (parsedData.fileName) {\n\t            fileName = parsedData.fileName;\n\t          }\n\t        } else {\n\t          var reader = new window.FileReader();\n\t          reader.readAsDataURL(data);\n\t          reader.onload = function (event) {\n\t            FileSaver.SaveToDisk(event.target.result, fileName);\n\t            if (config.onFileReceived) config.onFileReceived(fileName);\n\t          };\n\t        }\n\t      }\n\t\n\t      if (!moz) {\n\t        if (data.packets) numberOfPackets = packets = parseInt(data.packets);\n\t\n\t        if (config.onFileProgress) config.onFileProgress({\n\t          remaining: packets--,\n\t          length: numberOfPackets,\n\t          received: numberOfPackets - packets\n\t        });\n\t\n\t        content.push(data.message);\n\t\n\t        if (data.last) {\n\t          FileSaver.SaveToDisk(content.join(''), data.name);\n\t          if (config.onFileReceived) config.onFileReceived(data.name);\n\t          content = [];\n\t        }\n\t      }\n\t    }\n\t\n\t    return {\n\t      receive: receive\n\t    };\n\t  };\n\t\n\t  FileSaver = {\n\t    SaveToDisk: function SaveToDisk(fileUrl, fileName) {\n\t      var save = document.createElement('a');\n\t      save.href = fileUrl;\n\t      save.target = '_blank';\n\t      save.download = fileName || fileUrl;\n\t\n\t      var evt = new MouseEvent('click', {\n\t        view: window,\n\t        bubbles: true,\n\t        cancelable: true\n\t      });\n\t\n\t      save.dispatchEvent(evt);(window.URL || window.webkitURL).revokeObjectURL(save.href);\n\t    }\n\t  };\n\t}\n\t\n\tfunction run() {\n\t  console.log(\"running\");\n\t  $('#showLocalOffer').modal('hide');\n\t  $('#getRemoteAnswer').modal('hide');\n\t  $('#waitForConnection').modal('hide');\n\t  $('#createOrJoin').modal('show');\n\t\n\t  $('#createBtn').click(function () {\n\t    $('#showLocalOffer').modal('show');\n\t    createLocalOffer();\n\t  });\n\t\n\t  $('#joinBtn').click(function () {\n\t    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\t    navigator.getUserMedia({ video: true, audio: true }, function (stream) {\n\t      var video = document.getElementById('localVideo');\n\t      video.src = window.URL.createObjectURL(stream);\n\t      video.play();\n\t      pc2.addStream(stream);\n\t    }, function (error) {\n\t      console.log('Error adding stream to pc2: ' + error);\n\t    });\n\t    $('#getRemoteOffer').modal('show');\n\t  });\n\t\n\t  $('#offerSentBtn').click(function () {\n\t    $('#getRemoteAnswer').modal('show');\n\t  });\n\t\n\t  $('#offerRecdBtn').click(function () {\n\t    var offer = $('#remoteOffer').val();\n\t    var offerDesc = new RTCSessionDescription(JSON.parse(offer));\n\t    console.log('Received remote offer', offerDesc);\n\t    writeToChatLog('Received remote offer', 'text-success');\n\t    handleOfferFromPC1(offerDesc);\n\t    $('#showLocalAnswer').modal('show');\n\t  });\n\t\n\t  $('#answerSentBtn').click(function () {\n\t    $('#waitForConnection').modal('show');\n\t  });\n\t\n\t  $('#answerRecdBtn').click(function () {\n\t    var answer = $('#remoteAnswer').val();\n\t    var answerDesc = new RTCSessionDescription(JSON.parse(answer));\n\t    handleAnswerFromPC2(answerDesc);\n\t    $('#waitForConnection').modal('show');\n\t  });\n\t\n\t  $('#fileBtn').change(function () {\n\t    var file = this.files[0];\n\t    console.log(file);\n\t\n\t    sendFile(file);\n\t  });\n\t  console.log(\"done running\");\n\t}\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      cordovaReady: false\n\t    };\n\t  },\n\t  ready: function ready() {\n\t    console.log(\"ready\");\n\t    if (navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry|IEMobile)/)) {\n\t      if (window.device) {\n\t        run();\n\t      } else {\n\t        document.addEventListener('deviceready', function () {\n\t          run();\n\t        });\n\t      };\n\t    } else {\n\t      run();\n\t    };\n\t  },\n\t  methods: {\n\t    sendMessage: function sendMessage() {\n\t      if ($('#messageTextBox').val()) {\n\t        var channel = new RTCMultiSession();\n\t        writeToChatLog($('#messageTextBox').val(), 'text-success');\n\t        channel.send({ message: $('#messageTextBox').val() });\n\t        $('#messageTextBox').val('');\n\t\n\t        $('#chatlog').scrollTop($('#chatlog')[0].scrollHeight);\n\t      }\n\t\n\t      return false;\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__.p + \"static/img/spinner.9c1bc71.gif\";\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div id=app> <chat></chat> </div> \";\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = \" <div class=container _v-02dad771=\\\"\\\"> <div class=row _v-02dad771=\\\"\\\"> <div class=\\\"col-xs-12 col-sm-4 col-md-4 col-lg-4 col-xl-4\\\" _v-02dad771=\\\"\\\"> <video id=localVideo _v-02dad771=\\\"\\\"></video> </div> <div class=\\\"col-xs-12 col-sm-4 col-md-4 col-lg-4 col-xl-4\\\" _v-02dad771=\\\"\\\"> <video id=remoteVideo _v-02dad771=\\\"\\\"></video> </div> <div class=\\\"col-xs-12 col-sm-4 col-md-4 col-lg-4 col-xl-4\\\" _v-02dad771=\\\"\\\"> <fieldset class=well _v-02dad771=\\\"\\\"> <p class=\\\"head muted\\\" _v-02dad771=\\\"\\\"> Serverless WebRTC chat. </p> <div class=text-info id=chatlog style=\\\"height:350px; overflow:auto\\\" _v-02dad771=\\\"\\\"> </div> </fieldset> <form class=form-inline v-on:submit.prevent=sendMessage action=\\\"\\\" _v-02dad771=\\\"\\\"> <input type=text id=messageTextBox placeholder=\\\"Type your message here\\\" _v-02dad771=\\\"\\\"> <button type=submit id=sendMessageBtn class=btn _v-02dad771=\\\"\\\">Send message</button> </form> </div> <div class=\\\"modal fade\\\" id=showLocalOffer data-backdrop=static tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true hidden=\\\"\\\" _v-02dad771=\\\"\\\"> <div class=modal-dialog role=document _v-02dad771=\\\"\\\"> <div class=modal-content _v-02dad771=\\\"\\\"> <div class=modal-header _v-02dad771=\\\"\\\"> <h3 id=myModalLabel _v-02dad771=\\\"\\\">Send your local offer to someone else</h3> </div> <div class=modal-body _v-02dad771=\\\"\\\"> Here's your \\\"offer\\\" -- it tells someone else how to connect to you. Send the whole thing to them, for example in an instant message or e-mail. <br _v-02dad771=\\\"\\\"> <textarea class=input-large id=localOffer name=localOffer rows=10 cols=100 _v-02dad771=\\\"\\\"></textarea> </div> <div class=modal-footer _v-02dad771=\\\"\\\"> <button class=\\\"btn btn-primary\\\" id=offerSentBtn data-dismiss=modal aria-hidden=true _v-02dad771=\\\"\\\">Okay, I sent it.</button> </div> </div> </div> </div> <div class=\\\"modal fade\\\" id=showLocalAnswer data-backdrop=static tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true hidden=\\\"\\\" _v-02dad771=\\\"\\\"> <div class=modal-dialog role=document _v-02dad771=\\\"\\\"> <div class=modal-content _v-02dad771=\\\"\\\"> <div class=modal-header _v-02dad771=\\\"\\\"> <h3 id=myModalLabel _v-02dad771=\\\"\\\">Send your local answer to someone else</h3> </div> <div class=modal-body _v-02dad771=\\\"\\\"> Here's your \\\"answer\\\" -- it tells someone else how to connect to you. Send the whole thing to them, for example in an instant message or e-mail. <br _v-02dad771=\\\"\\\"> <textarea class=input-large id=localAnswer name=localAnswer rows=10 cols=100 _v-02dad771=\\\"\\\"></textarea> </div> <div class=modal-footer _v-02dad771=\\\"\\\"> <button class=\\\"btn btn-primary\\\" id=answerSentBtn data-dismiss=modal aria-hidden=true _v-02dad771=\\\"\\\">Okay, I sent it.</button> </div> </div> </div> </div> <div class=\\\"modal fad\\\" id=getRemoteOffer data-backdrop=static tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true hidden=\\\"\\\" _v-02dad771=\\\"\\\"> <div class=modal-dialog role=document _v-02dad771=\\\"\\\"> <div class=modal-content _v-02dad771=\\\"\\\"> <div class=modal-header _v-02dad771=\\\"\\\"> <h3 id=myModalLabel _v-02dad771=\\\"\\\">Paste the \\\"offer\\\" you received</h3> </div> <div class=modal-body _v-02dad771=\\\"\\\"> The person who created the room will send you an \\\"offer\\\" string -- paste it here. <br _v-02dad771=\\\"\\\"> <textarea class=input-large id=remoteOffer name=remoteOffer rows=10 cols=100 _v-02dad771=\\\"\\\"></textarea> </div> <div class=modal-footer _v-02dad771=\\\"\\\"> <button class=\\\"btn btn-primary\\\" id=offerRecdBtn data-dismiss=modal aria-hidden=true _v-02dad771=\\\"\\\">Okay, I pasted it.</button> </div> </div> </div> </div> <div class=\\\"modal fade\\\" id=getRemoteAnswer data-backdrop=static tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true hidden=\\\"\\\" _v-02dad771=\\\"\\\"> <div class=modal-dialog role=document _v-02dad771=\\\"\\\"> <div class=modal-content _v-02dad771=\\\"\\\"> <div class=modal-header _v-02dad771=\\\"\\\"> <h3 id=myModalLabel _v-02dad771=\\\"\\\">Paste the \\\"answer\\\" you received</h3> </div> <div class=modal-body _v-02dad771=\\\"\\\"> Now paste in the \\\"answer\\\" that was sent back to you. <br _v-02dad771=\\\"\\\"> <textarea class=input-large id=remoteAnswer name=remoteAnswer rows=10 cols=100 _v-02dad771=\\\"\\\"></textarea> </div> <div class=modal-footer _v-02dad771=\\\"\\\"> <button class=\\\"btn btn-primary\\\" id=answerRecdBtn data-dismiss=modal aria-hidden=true _v-02dad771=\\\"\\\">Okay, I pasted it.</button> </div> </div> </div> </div> <div class=\\\"modal fade\\\" id=waitForConnection data-backdrop=static tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true hidden=\\\"\\\" _v-02dad771=\\\"\\\"> <div class=modal-dialog role=document _v-02dad771=\\\"\\\"> <div class=modal-content _v-02dad771=\\\"\\\"> <div class=modal-header _v-02dad771=\\\"\\\"> <h3 id=myModalLabel _v-02dad771=\\\"\\\">Waiting for connection</h3> </div> <div class=modal-body _v-02dad771=\\\"\\\"> This dialog will disappear when a connection is made. </div> <div class=spinner align=center _v-02dad771=\\\"\\\"> <img src=\" + __webpack_require__(8) + \" _v-02dad771=\\\"\\\"> </div> </div> </div> </div> <div class=\\\"modal fade\\\" id=createOrJoin data-backdrop=static tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true _v-02dad771=\\\"\\\"> <div class=modal-dialog role=document _v-02dad771=\\\"\\\"> <div class=modal-content _v-02dad771=\\\"\\\"> <div class=modal-header _v-02dad771=\\\"\\\"> <h3 id=myModalLabel _v-02dad771=\\\"\\\">Create or join a room?</h3> </div> <div class=modal-footer _v-02dad771=\\\"\\\"> <button class=btn id=joinBtn data-dismiss=modal aria-hidden=true _v-02dad771=\\\"\\\">Join</button> <button class=\\\"btn btn-primary\\\" id=createBtn data-dismiss=modal aria-hidden=true _v-02dad771=\\\"\\\">Create</button> </div> </div> </div> </div> </div> </div> \";\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(6)\n\t__vue_script__ = __webpack_require__(1)\n\t__vue_template__ = __webpack_require__(9)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(7)\n\t__vue_script__ = __webpack_require__(2)\n\t__vue_template__ = __webpack_require__(10)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** static/js/app.41670cd4a1ae1b81d63e.js\n **/","console.log(\"main\");\n\n// just double check that console logs are available in debugger\nfunction onDeviceReady() {\n    if (window.cordova.logger) {\n        window.cordova.logger.__onDeviceReady();\n    }\n}\n\ndocument.addEventListener('deviceready', onDeviceReady, false);\n\nimport Vue from 'vue'\nimport App from './App'\n\n/* eslint-disable no-new */\nnew Vue({\n  el: 'body',\n  components: { App }\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","<template>\n  <div id=\"app\">\n    <chat></chat>\n  </div>\n</template>\n\n<script>\n  console.log(\"app\");\n  \n  import Chat from './components/Chat'\n\n  export default {\n    components: {\n      Chat\n    }\n  }\n</script>\n\n<style>\n  body {\n      padding: 0;\n      margin: 0;\n  }\n  html, body, #app {\n      width: 100%;\n      height: 100%;\n  }\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** App.vue?0d992ada\n **/","<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-xs-12 col-sm-4 col-md-4 col-lg-4 col-xl-4\">\n      <video id=\"localVideo\"></video>\n      </div>\n      <div class=\"col-xs-12 col-sm-4 col-md-4 col-lg-4 col-xl-4\">\n        <video id=\"remoteVideo\"></video>\n      </div>\n      <div class=\"col-xs-12 col-sm-4 col-md-4 col-lg-4 col-xl-4\">\n        <fieldset class=\"well\">\n          <p class=\"head muted\">\n            Serverless WebRTC chat.\n          </p>\n          <div class=\"text-info\" id=\"chatlog\" style=\"height:350px; overflow:auto;\">\n          </div>\n        </fieldset>\n        <form class=\"form-inline\" v-on:submit.prevent=\"sendMessage\" action=\"\">\n          <input type=\"text\" id=\"messageTextBox\" placeholder=\"Type your message here\">\n          <button type=\"submit\" id=\"sendMessageBtn\" class=\"btn\">Send message</button>\n        </form>\n        <!-- <input type=\"file\" id=\"fileBtn\"> -->\n      </div>\n\n      <div class=\"modal fade\" id=\"showLocalOffer\" data-backdrop=\"static\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" hidden>\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">      \n            <div class=\"modal-header\">\n              <h3 id=\"myModalLabel\">Send your local offer to someone else</h3>\n            </div>\n            <div class=\"modal-body\">\n              Here's your \"offer\" -- it tells someone else how to connect to you.  Send the whole thing to them, for example in an instant message or e-mail.\n            <br/>\n            <textarea class=\"input-large\" id=\"localOffer\" name=\"localOffer\" rows=\"10\" cols=\"100\"></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              <button class=\"btn btn-primary\" id=\"offerSentBtn\" data-dismiss=\"modal\" aria-hidden=\"true\">Okay, I sent it.</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal fade\" id=\"showLocalAnswer\" data-backdrop=\"static\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" hidden>\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">      \n            <div class=\"modal-header\">\n              <h3 id=\"myModalLabel\">Send your local answer to someone else</h3>\n            </div>\n            <div class=\"modal-body\">\n              Here's your \"answer\" -- it tells someone else how to connect to you.  Send the whole thing to them, for example in an instant message or e-mail.\n            <br/>\n            <textarea class=\"input-large\" id=\"localAnswer\" name=\"localAnswer\" rows=\"10\" cols=\"100\"></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              <button class=\"btn btn-primary\" id=\"answerSentBtn\" data-dismiss=\"modal\" aria-hidden=\"true\">Okay, I sent it.</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal fad\" id=\"getRemoteOffer\" data-backdrop=\"static\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" hidden>\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">      \n            <div class=\"modal-header\">\n              <h3 id=\"myModalLabel\">Paste the \"offer\" you received</h3>\n            </div>\n            <div class=\"modal-body\">\n              The person who created the room will send you an \"offer\" string -- paste it here.\n            <br/>\n            <textarea class=\"input-large\" id=\"remoteOffer\" name=\"remoteOffer\" rows=\"10\" cols=\"100\"></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              <button class=\"btn btn-primary\" id=\"offerRecdBtn\" data-dismiss=\"modal\" aria-hidden=\"true\">Okay, I pasted it.</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal fade\" id=\"getRemoteAnswer\" data-backdrop=\"static\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" hidden>\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">      \n            <div class=\"modal-header\">\n              <h3 id=\"myModalLabel\">Paste the \"answer\" you received</h3>\n            </div>\n            <div class=\"modal-body\">\n              Now paste in the \"answer\" that was sent back to you.\n            <br/>\n            <textarea class=\"input-large\" id=\"remoteAnswer\" name=\"remoteAnswer\" rows=\"10\" cols=\"100\"></textarea>\n            </div>\n            <div class=\"modal-footer\">\n              <button class=\"btn btn-primary\" id=\"answerRecdBtn\" data-dismiss=\"modal\" aria-hidden=\"true\">Okay, I pasted it.</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal fade\" id=\"waitForConnection\" data-backdrop=\"static\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" hidden>\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">    \n            <div class=\"modal-header\">\n              <h3 id=\"myModalLabel\">Waiting for connection</h3>\n            </div>\n            <div class=\"modal-body\">\n              This dialog will disappear when a connection is made.\n            </div>\n            <div class=\"spinner\" align=\"center\">\n              <img src=\"../assets/img/spinner.gif\"></img>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"modal fade\" id=\"createOrJoin\" data-backdrop=\"static\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">    \n            <div class=\"modal-header\">\n              <h3 id=\"myModalLabel\">Create or join a room?</h3>\n            </div>\n            <div class=\"modal-footer\">\n              <button class=\"btn\" id=\"joinBtn\" data-dismiss=\"modal\" aria-hidden=\"true\">Join</button>\n              <button class=\"btn btn-primary\" id=\"createBtn\" data-dismiss=\"modal\" aria-hidden=\"true\">Create</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  console.log(\"in chat\");\n\n  var RTCPeerConnection           = null,\n      RTCSessionDescription       = null,\n      RTCIceCandidate             = null,\n      getUserMedia                = null,\n      attachMediaStream           = null,\n      reattachMediaStream         = null,\n      webrtcDetectedBrowser       = null,\n      cfg                         = null,\n      con                         = null,\n      pc1                         = null,\n      dc1                         = null,\n      tn1                         = null,\n      activedc                    = null,\n      pc1icedone                  = null,\n      sdpConstraints              = null,\n      fileSent                    = null,\n      fileProgress                = null,\n      sendFile                    = null,\n      setupDC1                    = null,\n      createLocalOffer            = null,\n      handleOnaddstream           = null,\n      handleOnconnection          = null,\n      onsignalingstatechange      = null,\n      oniceconnectionstatechange  = null,\n      onicegatheringstatechange   = null,\n      handleAnswerFromPC2         = null,\n      handleCandidateFromPC2      = null,\n      pc2                         = null,\n      dc2                         = null,\n      pc2icedone                  = null,\n      handleOfferFromPC1          = null,\n      handleCandidateFromPC1      = null,\n      getTimestamp                = null,\n      writeToChatLog              = null,\n      RTCMultiSession             = null,\n      FileSender                  = null,\n      FileReceiver                = null,\n      FileSaver                   = null\n\n  if ( navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry|IEMobile)/) ) {console.log(\"cordova\");\n    // cordova!\n    if ( window.device ) {console.log(\"script: device ready\");\n      // device ready!\n      if (window.device.platform === 'iOS') {console.log(\"iOS\");\n        // @adam-hanna: is this async or sync?!\n        cordova.plugins.iosrtc.registerGlobals();\n      }\n\n      adapt();\n      build();\n    } else {\n      // device not ready!\n      document.addEventListener('deviceready', function () {console.log(\"script: listener - device ready\");\n        // Just for iOS devices.\n        if (window.device.platform === 'iOS') {console.log(\"iOS\");\n          // @adam-hanna: is this async or sync?!\n          cordova.plugins.iosrtc.registerGlobals();\n        }\n\n        adapt();\n        build();\n      });\n    };\n    \n  } else {console.log(\"Not cordova\");\n    // not cordova\n    adapt();\n    build();\n  }\n\n  function adapt() {console.log(\"adapting\");\n    if (navigator.mozGetUserMedia) {\n      console.log('This appears to be Firefox')\n\n      webrtcDetectedBrowser = 'firefox'\n\n      // The RTCPeerConnection object.\n      RTCPeerConnection = mozRTCPeerConnection\n\n      // The RTCSessionDescription object.\n      RTCSessionDescription = mozRTCSessionDescription\n\n      // The RTCIceCandidate object.\n      RTCIceCandidate = mozRTCIceCandidate\n\n      // Get UserMedia (only difference is the prefix).\n      // Code from Adam Barth.\n      getUserMedia = navigator.mozGetUserMedia.bind(navigator)\n\n      // Attach a media stream to an element.\n      attachMediaStream = function (element, stream) {\n        console.log('Attaching media stream')\n        element.mozSrcObject = stream\n        element.play()\n      }\n\n      reattachMediaStream = function (to, from) {\n        console.log('Reattaching media stream')\n        to.mozSrcObject = from.mozSrcObject\n        to.play()\n      }\n\n      // Fake get{Video,Audio}Tracks\n      MediaStream.prototype.getVideoTracks = function () {\n        return []\n      }\n\n      MediaStream.prototype.getAudioTracks = function () {\n        return []\n      }\n    } else if (navigator.webkitGetUserMedia) {\n      console.log('This appears to be Chrome or iOS using a shim')\n\n      webrtcDetectedBrowser = 'chrome'\n\n      // The RTCPeerConnection object.\n      RTCPeerConnection = webkitRTCPeerConnection\n\n      // Get UserMedia (only difference is the prefix).\n      // Code from Adam Barth.\n      getUserMedia = navigator.webkitGetUserMedia.bind(navigator)\n\n      // Attach a media stream to an element.\n      attachMediaStream = function (element, stream) {\n        element.src = webkitURL.createObjectURL(stream)\n      }\n\n      reattachMediaStream = function (to, from) {\n        to.src = from.src\n      }\n\n      // The representation of tracks in a stream is changed in M26.\n      // Unify them for earlier Chrome versions in the coexisting period.\n      if (!webkitMediaStream.prototype.getVideoTracks) {\n        webkitMediaStream.prototype.getVideoTracks = function () {\n          return this.videoTracks\n        }\n        webkitMediaStream.prototype.getAudioTracks = function () {\n          return this.audioTracks\n        }\n      }\n\n      // New syntax of getXXXStreams method in M26.\n      if (!webkitRTCPeerConnection.prototype.getLocalStreams) {\n        webkitRTCPeerConnection.prototype.getLocalStreams = function () {\n          return this.localStreams\n        }\n        webkitRTCPeerConnection.prototype.getRemoteStreams = function () {\n          return this.remoteStreams\n        }\n      }\n    } else {\n      alert(\"This browser doesn't support webRTC and cannot be used to chat\");\n    };\n  };\n\n  function build() {console.log(\"building\");\n    cfg = {'iceServers': [{'url': 'stun:23.21.150.121'}]}\n    con = { 'optional': [{'DtlsSrtpKeyAgreement': true}] }\n\n    /* THIS IS ALICE, THE CALLER/SENDER */\n    pc1 = new RTCPeerConnection(cfg, con)\n    dc1 = null\n    tn1 = null\n\n    // Since the same JS file contains code for both sides of the connection,\n    // activedc tracks which of the two possible datachannel variables we're using.\n    // var activedc\n\n    pc1icedone = false\n\n    sdpConstraints = {\n      optional: [],\n      mandatory: {\n        OfferToReceiveAudio: true,\n        OfferToReceiveVideo: true\n      }\n    }\n\n    fileSent = function(file) {\n      console.log(file + ' sent')\n    }\n\n    fileProgress = function(file) {\n      console.log(file + ' progress')\n    }\n\n    sendFile = function(data) {\n      if (data.size) {\n        FileSender.send({\n          file: data,\n          onFileSent: fileSent,\n          onFileProgress: fileProgress,\n        })\n      }\n    }\n\n    setupDC1 = function() {\n      try {\n        var fileReceiver1 = new FileReceiver()\n        dc1 = pc1.createDataChannel('test', {reliable: true})\n        activedc = dc1\n        console.log('Created datachannel (pc1)')\n        dc1.onopen = function (e) {\n          console.log('data channel connect')\n          $('#waitForConnection').modal('hide')\n          $('#waitForConnection').remove()\n        }\n        dc1.onmessage = function (e) {\n          console.log('Got message (pc1)', e.data)\n          if (e.data.size) {\n            fileReceiver1.receive(e.data, {})\n          } else {\n            if (e.data.charCodeAt(0) == 2) {\n              // The first message we get from Firefox (but not Chrome)\n              // is literal ASCII 2 and I don't understand why -- if we\n              // leave it in, JSON.parse() will barf.\n              return\n            }\n            console.log(e)\n            var data = JSON.parse(e.data)\n            if (data.type === 'file') {\n              fileReceiver1.receive(e.data, {})\n            } else {\n              writeToChatLog(data.message, 'text-info')\n              // Scroll chat text area to the bottom on new input.\n              $('#chatlog').scrollTop($('#chatlog')[0].scrollHeight)\n            }\n          }\n        }\n      } catch (e) { console.warn('No data channel (pc1)', e); }\n    }\n\n    createLocalOffer = function() {\n      console.log('video1')\n      navigator.getUserMedia = navigator.getUserMedia ||\n                               navigator.webkitGetUserMedia ||\n                               navigator.mozGetUserMedia ||\n                               navigator.msGetUserMedia\n      navigator.getUserMedia({video: true, audio: true}, function (stream) {\n        var video = document.getElementById('localVideo')\n        video.src = window.URL.createObjectURL(stream)\n        video.play()\n        pc1.addStream(stream)\n        console.log(stream)\n        console.log('adding stream to pc1')\n        setupDC1()\n        pc1.createOffer(function (desc) {\n          pc1.setLocalDescription(desc, function () {}, function () {})\n          console.log('created local offer', desc)\n        },\n        function () { console.warn(\"Couldn't create offer\") },\n        sdpConstraints)\n      }, function (error) {\n        console.log('Error adding stream to pc1: ' + error)\n      })\n    }\n\n    pc1.onicecandidate = function (e) {\n      console.log('ICE candidate (pc1)', e)\n      if (e.candidate == null) {\n        $('#localOffer').html(JSON.stringify(pc1.localDescription))\n      }\n    }\n\n    handleOnaddstream = function(e) {\n      console.log('Got remote stream', e.stream)\n      var el = document.getElementById('remoteVideo')\n      el.autoplay = true\n      attachMediaStream(el, e.stream)\n    }\n\n    pc1.onaddstream = handleOnaddstream\n\n    handleOnconnection = function() {\n      console.log('Datachannel connected')\n      writeToChatLog('Datachannel connected', 'text-success')\n      $('#waitForConnection').modal('hide')\n      // If we didn't call remove() here, there would be a race on pc2:\n      //   - first onconnection() hides the dialog, then someone clicks\n      //     on answerSentBtn which shows it, and it stays shown forever.\n      $('#waitForConnection').remove()\n      $('#showLocalAnswer').modal('hide')\n      $('#messageTextBox').focus()\n      $('.modal-backdrop').hide()\n    }\n\n    pc1.onconnection = handleOnconnection\n\n    onsignalingstatechange = function(state) {\n      console.info('signaling state change:', state)\n    }\n\n    oniceconnectionstatechange = function(state) {\n      console.info('ice connection state change:', state)\n    }\n\n    onicegatheringstatechange = function(state) {\n      console.info('ice gathering state change:', state)\n    }\n\n    pc1.onsignalingstatechange = onsignalingstatechange\n    pc1.oniceconnectionstatechange = oniceconnectionstatechange\n    pc1.onicegatheringstatechange = onicegatheringstatechange\n\n    handleAnswerFromPC2 = function(answerDesc) {\n      console.log('Received remote answer: ', answerDesc)\n      writeToChatLog('Received remote answer', 'text-success')\n      pc1.setRemoteDescription(answerDesc)\n    }\n\n    handleCandidateFromPC2 = function(iceCandidate) {\n      pc1.addIceCandidate(iceCandidate)\n    }\n\n    /* THIS IS BOB, THE ANSWERER/RECEIVER */\n\n    pc2 = new RTCPeerConnection(cfg, con)\n    dc2 = null\n\n    pc2icedone = false\n\n    pc2.ondatachannel = function (e) {\n      var fileReceiver2 = new FileReceiver()\n      var datachannel = e.channel || e; // Chrome sends event, FF sends raw channel\n      console.log('Received datachannel (pc2)', arguments)\n      dc2 = datachannel\n      activedc = dc2\n      dc2.onopen = function (e) {\n        console.log('data channel connect')\n        $('#waitForConnection').modal('hide')\n        $('#waitForConnection').remove()\n      }\n      dc2.onmessage = function (e) {\n        console.log('Got message (pc2)', e.data)\n        if (e.data.size) {\n          fileReceiver2.receive(e.data, {})\n        } else {\n          var data = JSON.parse(e.data)\n          if (data.type === 'file') {\n            fileReceiver2.receive(e.data, {})\n          } else {\n            writeToChatLog(data.message, 'text-info')\n            // Scroll chat text area to the bottom on new input.\n            $('#chatlog').scrollTop($('#chatlog')[0].scrollHeight)\n          }\n        }\n      }\n    }\n\n    handleOfferFromPC1 = function(offerDesc) {\n      pc2.setRemoteDescription(offerDesc)\n      pc2.createAnswer(function (answerDesc) {\n        writeToChatLog('Created local answer', 'text-success')\n        console.log('Created local answer: ', answerDesc)\n        pc2.setLocalDescription(answerDesc)\n      },\n      function () { console.warn(\"Couldn't create offer\") },\n      sdpConstraints)\n    }\n\n    pc2.onicecandidate = function (e) {\n      console.log('ICE candidate (pc2)', e)\n      if (e.candidate == null) {\n        $('#localAnswer').html(JSON.stringify(pc2.localDescription))\n      }\n    }\n\n    pc2.onsignalingstatechange = onsignalingstatechange\n    pc2.oniceconnectionstatechange = oniceconnectionstatechange\n    pc2.onicegatheringstatechange = onicegatheringstatechange\n\n    handleCandidateFromPC1 = function(iceCandidate) {\n      pc2.addIceCandidate(iceCandidate)\n    }\n\n    pc2.onaddstream = handleOnaddstream\n    pc2.onconnection = handleOnconnection\n\n    getTimestamp = function() {\n      var totalSec = new Date().getTime() / 1000\n      var hours = parseInt(totalSec / 3600) % 24\n      var minutes = parseInt(totalSec / 60) % 60\n      var seconds = parseInt(totalSec % 60)\n\n      var result = (hours < 10 ? '0' + hours : hours) + ':' +\n        (minutes < 10 ? '0' + minutes : minutes) + ':' +\n        (seconds < 10 ? '0' + seconds : seconds)\n\n      return result\n    }\n\n    writeToChatLog = function(message, message_type) {\n      document.getElementById('chatlog').innerHTML += '<p class=\"' + message_type + '\">' + '[' + getTimestamp() + '] ' + message + '</p>'\n    }\n\n    // file send\n    window.moz = !! navigator.mozGetUserMedia\n\n    RTCMultiSession = function (options) {\n      return {\n        send: function (message) {\n          if (moz && message.file)\n            var data = message.file\n          else\n            var data = JSON.stringify(message)\n\n          activedc.send(data)\n        }\n      }\n    }\n\n    FileSender = {\n      send: function (config) {\n        var channel = config.channel || new RTCMultiSession()\n        var file = config.file\n\n        /* if firefox nightly: share file blob directly */\n        if (moz) {\n          /* used on the receiver side to set received file name */\n          channel.send({\n            fileName: file.name,\n            type: 'file'\n          })\n\n          /* sending the entire file at once */\n          channel.send({\n            file: file\n          })\n\n          if (config.onFileSent) config.onFileSent(file)\n        }\n\n        /* if chrome */\n        if (!moz) {\n          var reader = new window.FileReader()\n          reader.readAsDataURL(file)\n          reader.onload = onReadAsDataURL\n        }\n\n        var packetSize = 1000 /* chars */ ,\n          textToTransfer = '',\n          numberOfPackets = 0,\n          packets = 0\n\n        function onReadAsDataURL (event, text) {\n          var data = {\n            type: 'file'\n          }\n\n          if (event) {\n            text = event.target.result\n            numberOfPackets = packets = data.packets = parseInt(text.length / packetSize)\n          }\n\n          if (config.onFileProgress)\n            config.onFileProgress({\n              remaining: packets--,\n              length: numberOfPackets,\n              sent: numberOfPackets - packets\n            })\n\n          if (text.length > packetSize) {\n            data.message = text.slice(0, packetSize)\n          } else {\n            data.message = text\n            data.last = true\n            data.name = file.name\n\n            if (config.onFileSent) config.onFileSent(file)\n          }\n\n          channel.send(data)\n\n          textToTransfer = text.slice(data.message.length)\n\n          if (textToTransfer.length)\n            setTimeout(function () {\n              onReadAsDataURL(null, textToTransfer)\n            }, 500)\n        }\n      }\n    }\n\n    FileReceiver = function() {\n      var content = [],\n        fileName = '',\n        packets = 0,\n        numberOfPackets = 0\n\n      function receive (data, config) {\n        /* if firefox nightly & file blob shared */\n        if (moz) {\n          if (!data.size) {\n            var parsedData = JSON.parse(data)\n            if (parsedData.fileName) {\n              fileName = parsedData.fileName\n            }\n          } else {\n            var reader = new window.FileReader()\n            reader.readAsDataURL(data)\n            reader.onload = function (event) {\n              FileSaver.SaveToDisk(event.target.result, fileName)\n              if (config.onFileReceived) config.onFileReceived(fileName)\n            }\n          }\n        }\n\n        if (!moz) {\n          if (data.packets)\n            numberOfPackets = packets = parseInt(data.packets)\n\n          if (config.onFileProgress)\n            config.onFileProgress({\n              remaining: packets--,\n              length: numberOfPackets,\n              received: numberOfPackets - packets\n            })\n\n          content.push(data.message)\n\n          if (data.last) {\n            FileSaver.SaveToDisk(content.join(''), data.name)\n            if (config.onFileReceived)\n              config.onFileReceived(data.name)\n            content = []\n          }\n        }\n      }\n\n      return {\n        receive: receive\n      }\n    }\n\n    FileSaver = {\n      SaveToDisk: function (fileUrl, fileName) {\n        var save = document.createElement('a')\n        save.href = fileUrl\n        save.target = '_blank'\n        save.download = fileName || fileUrl\n\n        var evt = new MouseEvent('click', {\n          view: window,\n          bubbles: true,\n          cancelable: true\n        })\n\n        save.dispatchEvent(evt)\n\n        ;(window.URL || window.webkitURL).revokeObjectURL(save.href)\n      }\n    }\n  }\n\n  function run() {console.log(\"running\");\n    $('#showLocalOffer').modal('hide')\n    $('#getRemoteAnswer').modal('hide')\n    $('#waitForConnection').modal('hide')\n    $('#createOrJoin').modal('show')\n\n    $('#createBtn').click(function () {\n      $('#showLocalOffer').modal('show')\n      createLocalOffer()\n    })\n\n    $('#joinBtn').click(function () {\n      navigator.getUserMedia = navigator.getUserMedia ||\n                               navigator.webkitGetUserMedia ||\n                               navigator.mozGetUserMedia ||\n                               navigator.msGetUserMedia\n      navigator.getUserMedia({video: true, audio: true}, function (stream) {\n        var video = document.getElementById('localVideo')\n        video.src = window.URL.createObjectURL(stream)\n        video.play()\n        pc2.addStream(stream)\n      }, function (error) {\n        console.log('Error adding stream to pc2: ' + error)\n      })\n      $('#getRemoteOffer').modal('show')\n    })\n\n    $('#offerSentBtn').click(function () {\n      $('#getRemoteAnswer').modal('show')\n    })\n\n    $('#offerRecdBtn').click(function () {\n      var offer = $('#remoteOffer').val()\n      var offerDesc = new RTCSessionDescription(JSON.parse(offer))\n      console.log('Received remote offer', offerDesc)\n      writeToChatLog('Received remote offer', 'text-success')\n      handleOfferFromPC1(offerDesc)\n      $('#showLocalAnswer').modal('show')\n    })\n\n    $('#answerSentBtn').click(function () {\n      $('#waitForConnection').modal('show')\n    })\n\n    $('#answerRecdBtn').click(function () {\n      var answer = $('#remoteAnswer').val()\n      var answerDesc = new RTCSessionDescription(JSON.parse(answer))\n      handleAnswerFromPC2(answerDesc)\n      $('#waitForConnection').modal('show')\n    })\n\n    $('#fileBtn').change(function () {\n      var file = this.files[0]\n      console.log(file)\n\n      sendFile(file)\n    })\n    console.log(\"done running\");\n  }\n\n  export default {\n    data: function() {\n        return {\n            cordovaReady: false\n        };\n    },\n    ready: function() {console.log(\"ready\");\n      if ( navigator.userAgent.match(/(iPhone|iPod|iPad|Android|BlackBerry|IEMobile)/) ) {\n        // cordova!\n        if ( window.device ) {\n          // device ready\n          run();\n        } else {\n          // device not ready\n          document.addEventListener('deviceready', function () {\n            run();\n          });\n        };\n      } else {\n        // not cordova\n        run();\n      };\n    },\n    methods: {\n      sendMessage: function() {\n        if ($('#messageTextBox').val()) {\n          var channel = new RTCMultiSession()\n          writeToChatLog($('#messageTextBox').val(), 'text-success')\n          channel.send({message: $('#messageTextBox').val()})\n          $('#messageTextBox').val('')\n\n          // Scroll chat text area to the bottom on new input.\n          $('#chatlog').scrollTop($('#chatlog')[0].scrollHeight)\n        }\n\n        return false\n      }\n    }\n  }\n</script>\n\n<style scoped>\n  textarea {\n    resize: none;\n\n    max-width: 100%;\n  }\n\n  input {\n    width: 100%;\n\n    margin-bottom: 10px;\n  }\n\n  video {\n     width: 100%;\n     height: auto;\n  }\n</style>\n\n\n/** WEBPACK FOOTER **\n ** Chat.vue?01830c5e\n **/","module.exports = __webpack_public_path__ + \"static/img/spinner.9c1bc71.gif\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/assets/img/spinner.gif\n ** module id = 8\n ** module chunks = 1\n **/","module.exports = \" <div id=app> <chat></chat> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n ** module id = 9\n ** module chunks = 1\n **/","module.exports = \" <div class=container _v-02dad771=\\\"\\\"> <div class=row _v-02dad771=\\\"\\\"> <div class=\\\"col-xs-12 col-sm-4 col-md-4 col-lg-4 col-xl-4\\\" _v-02dad771=\\\"\\\"> <video id=localVideo _v-02dad771=\\\"\\\"></video> </div> <div class=\\\"col-xs-12 col-sm-4 col-md-4 col-lg-4 col-xl-4\\\" _v-02dad771=\\\"\\\"> <video id=remoteVideo _v-02dad771=\\\"\\\"></video> </div> <div class=\\\"col-xs-12 col-sm-4 col-md-4 col-lg-4 col-xl-4\\\" _v-02dad771=\\\"\\\"> <fieldset class=well _v-02dad771=\\\"\\\"> <p class=\\\"head muted\\\" _v-02dad771=\\\"\\\"> Serverless WebRTC chat. </p> <div class=text-info id=chatlog style=\\\"height:350px; overflow:auto\\\" _v-02dad771=\\\"\\\"> </div> </fieldset> <form class=form-inline v-on:submit.prevent=sendMessage action=\\\"\\\" _v-02dad771=\\\"\\\"> <input type=text id=messageTextBox placeholder=\\\"Type your message here\\\" _v-02dad771=\\\"\\\"> <button type=submit id=sendMessageBtn class=btn _v-02dad771=\\\"\\\">Send message</button> </form> </div> <div class=\\\"modal fade\\\" id=showLocalOffer data-backdrop=static tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true hidden=\\\"\\\" _v-02dad771=\\\"\\\"> <div class=modal-dialog role=document _v-02dad771=\\\"\\\"> <div class=modal-content _v-02dad771=\\\"\\\"> <div class=modal-header _v-02dad771=\\\"\\\"> <h3 id=myModalLabel _v-02dad771=\\\"\\\">Send your local offer to someone else</h3> </div> <div class=modal-body _v-02dad771=\\\"\\\"> Here's your \\\"offer\\\" -- it tells someone else how to connect to you. Send the whole thing to them, for example in an instant message or e-mail. <br _v-02dad771=\\\"\\\"> <textarea class=input-large id=localOffer name=localOffer rows=10 cols=100 _v-02dad771=\\\"\\\"></textarea> </div> <div class=modal-footer _v-02dad771=\\\"\\\"> <button class=\\\"btn btn-primary\\\" id=offerSentBtn data-dismiss=modal aria-hidden=true _v-02dad771=\\\"\\\">Okay, I sent it.</button> </div> </div> </div> </div> <div class=\\\"modal fade\\\" id=showLocalAnswer data-backdrop=static tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true hidden=\\\"\\\" _v-02dad771=\\\"\\\"> <div class=modal-dialog role=document _v-02dad771=\\\"\\\"> <div class=modal-content _v-02dad771=\\\"\\\"> <div class=modal-header _v-02dad771=\\\"\\\"> <h3 id=myModalLabel _v-02dad771=\\\"\\\">Send your local answer to someone else</h3> </div> <div class=modal-body _v-02dad771=\\\"\\\"> Here's your \\\"answer\\\" -- it tells someone else how to connect to you. Send the whole thing to them, for example in an instant message or e-mail. <br _v-02dad771=\\\"\\\"> <textarea class=input-large id=localAnswer name=localAnswer rows=10 cols=100 _v-02dad771=\\\"\\\"></textarea> </div> <div class=modal-footer _v-02dad771=\\\"\\\"> <button class=\\\"btn btn-primary\\\" id=answerSentBtn data-dismiss=modal aria-hidden=true _v-02dad771=\\\"\\\">Okay, I sent it.</button> </div> </div> </div> </div> <div class=\\\"modal fad\\\" id=getRemoteOffer data-backdrop=static tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true hidden=\\\"\\\" _v-02dad771=\\\"\\\"> <div class=modal-dialog role=document _v-02dad771=\\\"\\\"> <div class=modal-content _v-02dad771=\\\"\\\"> <div class=modal-header _v-02dad771=\\\"\\\"> <h3 id=myModalLabel _v-02dad771=\\\"\\\">Paste the \\\"offer\\\" you received</h3> </div> <div class=modal-body _v-02dad771=\\\"\\\"> The person who created the room will send you an \\\"offer\\\" string -- paste it here. <br _v-02dad771=\\\"\\\"> <textarea class=input-large id=remoteOffer name=remoteOffer rows=10 cols=100 _v-02dad771=\\\"\\\"></textarea> </div> <div class=modal-footer _v-02dad771=\\\"\\\"> <button class=\\\"btn btn-primary\\\" id=offerRecdBtn data-dismiss=modal aria-hidden=true _v-02dad771=\\\"\\\">Okay, I pasted it.</button> </div> </div> </div> </div> <div class=\\\"modal fade\\\" id=getRemoteAnswer data-backdrop=static tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true hidden=\\\"\\\" _v-02dad771=\\\"\\\"> <div class=modal-dialog role=document _v-02dad771=\\\"\\\"> <div class=modal-content _v-02dad771=\\\"\\\"> <div class=modal-header _v-02dad771=\\\"\\\"> <h3 id=myModalLabel _v-02dad771=\\\"\\\">Paste the \\\"answer\\\" you received</h3> </div> <div class=modal-body _v-02dad771=\\\"\\\"> Now paste in the \\\"answer\\\" that was sent back to you. <br _v-02dad771=\\\"\\\"> <textarea class=input-large id=remoteAnswer name=remoteAnswer rows=10 cols=100 _v-02dad771=\\\"\\\"></textarea> </div> <div class=modal-footer _v-02dad771=\\\"\\\"> <button class=\\\"btn btn-primary\\\" id=answerRecdBtn data-dismiss=modal aria-hidden=true _v-02dad771=\\\"\\\">Okay, I pasted it.</button> </div> </div> </div> </div> <div class=\\\"modal fade\\\" id=waitForConnection data-backdrop=static tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true hidden=\\\"\\\" _v-02dad771=\\\"\\\"> <div class=modal-dialog role=document _v-02dad771=\\\"\\\"> <div class=modal-content _v-02dad771=\\\"\\\"> <div class=modal-header _v-02dad771=\\\"\\\"> <h3 id=myModalLabel _v-02dad771=\\\"\\\">Waiting for connection</h3> </div> <div class=modal-body _v-02dad771=\\\"\\\"> This dialog will disappear when a connection is made. </div> <div class=spinner align=center _v-02dad771=\\\"\\\"> <img src=\" + require(\"../assets/img/spinner.gif\") + \" _v-02dad771=\\\"\\\"> </div> </div> </div> </div> <div class=\\\"modal fade\\\" id=createOrJoin data-backdrop=static tabindex=-1 role=dialog aria-labelledby=myModalLabel aria-hidden=true _v-02dad771=\\\"\\\"> <div class=modal-dialog role=document _v-02dad771=\\\"\\\"> <div class=modal-content _v-02dad771=\\\"\\\"> <div class=modal-header _v-02dad771=\\\"\\\"> <h3 id=myModalLabel _v-02dad771=\\\"\\\">Create or join a room?</h3> </div> <div class=modal-footer _v-02dad771=\\\"\\\"> <button class=btn id=joinBtn data-dismiss=modal aria-hidden=true _v-02dad771=\\\"\\\">Join</button> <button class=\\\"btn btn-primary\\\" id=createBtn data-dismiss=modal aria-hidden=true _v-02dad771=\\\"\\\">Create</button> </div> </div> </div> </div> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-02dad771!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Chat.vue\n ** module id = 10\n ** module chunks = 1\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/App.vue\n ** module id = 11\n ** module chunks = 1\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js?id=_v-02dad771&scoped=true!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Chat.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Chat.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/template-rewriter.js?id=_v-02dad771!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Chat.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Chat.vue\n ** module id = 12\n ** module chunks = 1\n **/"],"sourceRoot":""}